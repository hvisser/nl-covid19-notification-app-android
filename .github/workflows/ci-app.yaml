name: 'Build & test'

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Check out and setup Gradle"
        uses: ./.github/actions/common-setup

      - name: "Check for code formatting violations"
        run: ./gradlew spotlessCheck --warning-mode=fail

      - name: "Build app"
        run: ./gradlew app:assemDevDebug app:assemDevDebugAndroidTest --warning-mode=fail

      - name: "Run tests"
        run: ./gradlew app:assemDevDebug app:assemDevDebugAndroidTest testDevDebugUnitTestCoverage testDebugUnitTestCoverage app:lintDevDebug

      - name: "Setup firebase credentials"
        uses: ./.github/actions/credentials
        with:
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: "Run instrumentation tests"
        run: ./gradlew app:runFlank

      - name: "Clean up credentials"
        if: always()
        uses: ./.github/actions/cleanup-credentials

  distribute:
    if: ${{ (github.ref == 'refs/heads/main') }}
    env:
      KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
    runs-on: ubuntu-latest
    needs: [ "build" ]

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Check out and setup Gradle"
        uses: ./.github/actions/common-setup

      - name: "Setup credentials"
        uses: ./.github/actions/credentials
        with:
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          keystoreFile: ${{ secrets.KEYSTORE_FILE }}

      - name: "Setup build id"
        ## TODO use correct offset based on existing build id
        run: echo BUILD_ID=$(( $GITHUB_RUN_NUMBER + 1000 )) >> $GITHUB_ENV

      - name: "Set release notes"
        run: git log -1 --format=%B > app/src/main/play/release-notes/nl-NL/internal.txt

      - name: "Distribute"
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
        run: ./gradlew app:bundleProdRelease app:assemAccRelease app:assemTstRelease app:assemProdRelease app:appDistributionUploadTstRelease app:appDistributionUploadAccRelease app:appDistributionUploadProdRelease

      - name: "Publish APKs"
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: app/build/outputs/apk
          retention-days: 5

      - name: "Publish bundle"
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: app/build/outputs/bundle/prodRelease

      - name: "Clean up credentials"
        if: always()
        uses: ./.github/actions/cleanup-credentials
