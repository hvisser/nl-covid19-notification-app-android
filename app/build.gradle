apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "com.github.triplet.play"
apply plugin: "com.osacky.fladle"
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'ru.cian.huawei-publish'

version = "1.3.0"
def buildVersionCode = System.getenv("BUILD_ID") != null ? System.getenv("BUILD_ID").toInteger() : 78961
archivesBaseName = "covid-notificatie-v${version}-${buildVersionCode}"


def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {

    defaultConfig {
        applicationId "nl.rijksoverheid.en"
        versionCode buildVersionCode
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "nl", "en", "de", "pl", "ro", "tr", "fr", "es", "bg", "ar", "fy"

        buildConfigField "boolean", "FEATURE_LOGGING", "false"
        buildConfigField "boolean", "FEATURE_DEBUG_NOTIFICATION", "false"
        buildConfigField "boolean", "FEATURE_SECURE_SCREEN", "true"
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            // https://github.com/robolectric/robolectric/issues/5115
            systemProperty("javax.net.ssl.trustStoreType", "JKS")

            // https://github.com/robolectric/robolectric/issues/5456
            systemProperty("robolectric.dependency.repo.id", "central")
            systemProperty("robolectric.dependency.repo.url", "https://repo1.maven.org/maven2")
        }
    }

    packagingOptions {
        exclude 'kotlin/**'
        exclude '**/*.kotlin_metadata'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
        exclude 'DebugProbesKt.bin'
        exclude 'build-data.properties'
        exclude 'play-**.properties'
    }

    signingConfigs {
        release {
            storeFile new File(System.getenv("KEYSTORE_FILE") != null ? System.getenv("KEYSTORE_FILE") : "dummy-keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_KEY_ALIAS")
            keyPassword System.getenv("KEYSTORE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "GIT_VERSION", "\"${getGitHash()}\""
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "FEATURE_LOGGING", "true"
            buildConfigField "String", "GIT_VERSION", "\"dev\""
        }
    }

    flavorDimensions "environment"

    productFlavors {
        dev {
            dimension "environment"
            buildConfigField "boolean", "FEATURE_SECURE_SCREEN", "false"
            buildConfigField "boolean", "FEATURE_DEBUG_NOTIFICATION", "true"
            versionNameSuffix "-dev"
        }
        tst {
            dimension "environment"
            buildConfigField "boolean", "FEATURE_SECURE_SCREEN", "false"
            buildConfigField "boolean", "FEATURE_LOGGING", "true"
            buildConfigField "boolean", "FEATURE_DEBUG_NOTIFICATION", "true"
            versionNameSuffix "-tst"
        }
        acc {
            dimension "environment"
            buildConfigField "boolean", "FEATURE_LOGGING", "true"
            versionNameSuffix "-acc"
        }
        prod {
            dimension "environment"
        }
    }

    compileOptions.coreLibraryDesugaringEnabled true

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name == 'debug' && names.contains("prod")) {
            setIgnore(true)
        }
    }

    firebaseAppDistribution {
        appId = "1:937920499570:android:9ac7b5cf66523282f957eb"
        releaseNotesFile = rootProject.file("app/src/main/play/release-notes/nl-NL/internal.txt")
        groups = "android-latest"
    }
}

play {
    enabled = System.getenv("PLAY_STORE_CREDENTIALS") != null
    serviceAccountCredentials = System.getenv("PLAY_STORE_CREDENTIALS") != null ? new File(System.getenv("PLAY_STORE_CREDENTIALS")) : null
    track = "internal"
}

huaweiPublish {
    instances {
        prodRelease {
            buildFormat = "aab"
            publish = false
        }
    }
}

fladle {
    projectId = "vws-coronamelder"
    variant = "devDebug"
    testShards = 1
    devices = [
            ["model": "Pixel2", "version": "28"]
    ]
    testTargets = ["notAnnotation nl.rijksoverheid.en.screenshots.StoreScreenshots"]
}

repositories {
    maven {
        url 'https://dl.bintray.com/blipinsk/maven/'
        content {
            includeGroup "com.bartoszlipinski"
        }
    }
    maven {
        url 'https://dl.bintray.com/lisawray/maven/'
        content {
            includeGroup "com.xwray"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    implementation project(":api")
    implementation project(":en-api")
    implementation project(":signing")

    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.activity:activity-ktx:$androidx_activity_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.browser:browser:1.3.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$androidx_lifecycle_version"
    implementation "androidx.work:work-runtime-ktx:$androidx_work_version"
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    implementation "androidx.preference:preference-ktx:1.1.1"

    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_nav_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation 'com.google.android.material:material:1.3.0'
    implementation "com.google.android.play:core:1.9.1"
    implementation "com.google.android.play:core-ktx:1.8.1"
    implementation "com.google.android.gms:play-services-base:$play_services_base_version"
    implementation "com.google.android.gms:play-services-basement:$play_services_base_version"
    implementation "com.google.android.gms:play-services-tasks:$play_services_tasks_version"

    implementation 'com.airbnb.android:lottie:3.4.1'
    implementation "com.xwray:groupie:$groupie_version"
    implementation "com.xwray:groupie-viewbinding:$groupie_version"

    implementation "dev.chrisbanes.insetter:insetter:$insetter_version"

    testImplementation project(":test-support")
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"
    testImplementation "androidx.work:work-testing:$androidx_work_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlin_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$androidx_nav_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_core_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidx_espresso_version"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'com.bartoszlipinski:disable-animations-rule:2.0.0'
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlin_version"
    androidTestImplementation 'com.vanniktech:junit4-android-integration-rules:0.3.0'
    androidTestImplementation "org.mockito:mockito-android:3.4.6"
    androidTestImplementation 'tools.fastlane:screengrab:2.0.0'

    debugImplementation project(":test-support")
    debugImplementation "androidx.fragment:fragment-testing:$androidx_fragment_version"
    androidTestDebugImplementation project(":test-support")
}
